apiVersion: apps/v1
kind: Deployment
metadata:
  name: {'{'} .Chart.Name {'}'}-eks-deployment
  namespace: {'{'} .Values.namespace {'}'}
  labels:
    {'{'}- with .Values.labels {'}'}
    {'{'}- toYaml . | nindent 4 {'}'}
    {'{'}- end{'}'}
spec:
  {'{'}- if not .Values.autoscaling.enabled {'}'}
  replicas: {'{'} .Values.replicaCount {'}'}
  {'{'}- end {'}'}
  selector:
    matchLabels:
      {'{'}- with .Values.labels {'}'}
      {'{'}- toYaml . | nindent 6 {'}'}
      {'{'}- end{'}'}
  template:
    metadata:
      {'{'}- with .Values.podAnnotations {'}'}
      annotations:
        {'{'} toYaml . | nindent 8 {'}'}
      {'{'}- end {'}'}
      labels:
        {'{'}- with .Values.labels {'}'}
        {'{'} toYaml . | nindent 8 {'}'}
        {'{'}- end{'}'}
    spec:
      {'{'}- with .Values.imagePullSecrets {'}'}
      imagePullSecrets:
        {'{'} toYaml . | nindent 8 {'}'}
      {'{'}- end{'}'}
      serviceAccountName: {'{'} .Values.serviceAccount.name {'}'}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: secret-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {'{'} .Chart.Name {'}'}-{'{'} .Values.namespace {'}'}-spc
      securityContext:
        {'{'} toYaml .Values.podSecurityContext | nindent 8 {'}'}
      containers:
        - name: {'{'} .Chart.Name {'}'}-container
          securityContext:
            {'{'} toYaml .Values.securityContext | nindent 12 {'}'}
          image: "{'{'} .Values.image.repository {'}'}:{'{'} .Values.image.tag | default .Chart.AppVersion {'}'}"
          imagePullPolicy: {'{'} .Values.image.pullPolicy {'}'}
          command: ["/bin/sh", "-c"]
          args: ["exec redis-server --requirepass $(cat /mnt/app/conf/REDIS_PASSWORD)"]
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: secret-volume
              mountPath: /mnt/app/conf
          resources:
            {'{'} toYaml .Values.resources | nindent 12 {'}'}
          env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              value: {'{'} .Values.namespace {'}'}
            - name: DD_SERVICE_NAME
              value: {'{'} .Chart.Name {'}'}-{'{'} .Values.namespace {'}'}-eks
            {'{'}- if .Values.env {'}'}
            {'{'}- range .Values.env {'}'}
            - name: {'{'} .name {'}'}
              value: {'{'} .value | quote {'}'}
            {'{'}- end {'}'}
            {'{'}- end {'}'}
      {'{'}- with .Values.nodeSelector {'}'}
      nodeSelector:
        {'{'} toYaml . | nindent 8 {'}'}
      {'{'}- end {'}'}
      {'{'}- with .Values.affinity {'}'}
      affinity:
        {'{'} toYaml . | nindent 8 {'}'}
      {'{'}- end {'}'}
      {'{'}- with .Values.tolerations {'}'}
      tolerations:
        {'{'} toYaml . | nindent 8 {'}'}
      {'{'}- end {'}'}